
spring.application.name=kstreams-data-contracts

# Kafka bootstrap servers
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:pkc-921jm.us-east-2.aws.confluent.cloud:9092}

# Application id for Kafka Streams
spring.kafka.streams.application-id=kstreams-data-contracts-app

# Input and output topics
app.topic.input=stock_trades.raw
app.topic.output=stock_trades

# Use String serde for input (JSON_SR as JSON strings), Specific Avro for output
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

# Schema Registry configuration (use environment variables to supply real credentials)
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:https://psrc-lq2dm.us-east-2.aws.confluent.cloud}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=${SCHEMA_REGISTRY_API_KEY:}:{${SCHEMA_REGISTRY_API_SECRET:}}

# Additional Kafka Streams properties
spring.kafka.streams.properties.schema.registry.url=${spring.kafka.properties.schema.registry.url}
spring.kafka.streams.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.streams.properties.schema.registry.basic.auth.user.info=${spring.kafka.properties.schema.registry.basic.auth.user.info}


